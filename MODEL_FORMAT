MODEL FORMAT
------------
Documentation for working with asciituber models

File Structure:
---------------
The root contains
- mirrorlist: a file telling the program which layers are symmetrical and should be mirrored, see "Mirrorlist:" for more info
- $EMOTE/   : not fully implemented yet, only "idle" is read
- - $LAYER/ : each layer to be drawn, see "Layers:" for more info
- - -       : anything deeper depends on the layer, see "Layers:"

Mirrorlist:
-----------
A simple DSL to tell the mirror script which layers (see "Layers:") should be mirrored. Each line should contain just the name of a layer to mirror. eg:
<< EOF
base
eyebrowl
eyebrowr
EOF
The mirror script will take all the left side angles, reverse them, and use them as the right side angles. As such, it WILL overwrite any right side angles. Make sure anything you put in this file should actually be fully symmetrical!

Layers:
-------
TODO: allow for extra layers to be inserted
Layers with special handling:
NAME       DRAW ORDER
- base     - 0
- eyel     - 1
- eyer     - 2
- eyebrowl - 3
- eyebrowr - 4
- mouth    - 5
- hair     - 6
TODO: "Layers:" is unfinished


--------------------------------------------------------------------------------
the rest of this file hasn't been rewritten yet
--------------------------------------------------------------------------------
TODO: map file to map the default emote and emotes to cases (eg. wide eyes)
EMOTE
emote handling
- 'idle' is the fallback emote, any missing file will fallback to 'idle'
- only provide changed files, don't copy 'idle' fully!
- emotes can be named anything, but the default emote must be 'idle'

ANGLES
ANGLE LIST
- proper missing angle handling, other than the neutral ones which are
  required.
- variant angles are concatenated on the end of the main type
- yes, there's a lot to draw (45 angles), just don't draw the ones you're
  happy skipping (some/all of the tilt variants can probably be skipped,
  skipping all tilt angles means only 15 angles)
MAIN ANGLES (idle is required)
. . . . .   . . . . .   . . . . .
. . . . .   . . . . .   . . . . .
. . . . .   . . . . .   . . . . .
TLTLFT      IDLE        TLTRGHT

- idle
- up
- dn
- lftS
- lft
- rghtS
- rght
- upLftS
- upLft
- upRghtS
- upRght
- dnLftS
- dnLft
- dnRghtS
- dnRght
- tltLft
- tltLftUp
- tltLftDn
- tltLftLftS
- tltLftLft
- tltLftRghtS
- tltLftRght
- tltLftUpLftS
- tltLftUpLft
- tltLftUpRghtS
- tltLftUpRght
- tltLftDnLftS
- tltLftDnLft
- tltLftDnRghtS
- tltLftDnRght
- tltRght
- tltRghtUp
- tltRghtDn
- tltRghtLftS
- tltRghtLft
- tltRghtRghtS
- tltRghtRght
- tltRghtUpLftS
- tltRghtUpLft
- tltRghtUpRghtS
- tltRghtUpRght
- tltRghtDnLftS
- tltRghtDnLft
- tltRghtDnRghtS
- tltRghtDnRght

EYES STRUCTURE
BASE/state/ANGLE/dir
state { (open is required)
	open
	closedS (half-closed)
	closed
	wide
}
dir { (idle is required)
	idle
	up
	dn
	lft
	rght
	upLft
	upRght
	dnLft
	dnRght
}

MOUTH STRUCTURE
mouth/state/ANGLE

i   oSi  io
iS  ioS  iSo
c   oS   o

state { (closed is required)
	closed
	iS
	i
	oS
	o
	ioS
	oSi
	iSo
	io
	tongueS
	tongue
}

format:
	/config:
		line1: row offset (for all files)
		line2: column offset (for all files)
	/LAYERNUMBER:
		line1: fg color (7 for default)
		line2: bg color (0 for default)
		line3: attribute (
			0:normal
			1:bold
			2:faint
			3:italic
			4:underline
			5:blink (didn't know this was a thing, it's cool though)
			7:swap fg/bg (probably useless)
			9:strike
		)
		rest: ascii art

LAYERNUMBER: a number, higher numbers are drawn later, 0-9

- Whitespace leaves what's already on the screen alone and is not coloured
- Explicitly coloured whitespace is possible by using a layer where fg=bg
  and any character OTHER than whitespace will appear as coloured whitespace

# vim: wrap
